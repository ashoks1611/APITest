{
	"info": {
		"_postman_id": "71a44d43-55de-4092-8dee-c27cbaf8c512",
		"name": "POST_Albums_TestCases",
		"description": "pm.test(\"TestCase to check whether the Status code is 201\", function () {\n    pm.response.to.have.status(201);\n});\npm.test(\"TestCase to check whether the body contains the correct UserID\", function () {\n    pm.expect(pm.response.text()).to.include(data.UserID);\n});\npm.test(\"TestCase to check whether the body contains the correct ID\", function () {\n    pm.expect(pm.response.text()).to.include(data.ID);\n});\npm.test(\"TestCase to check whether the body contains the correct Title\", function () {\n    pm.expect(pm.response.text()).to.include(data.Title);\n});\npm.test(\"Performance Testing - Response time should be less than 1000ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(1000);\n});",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "post_Albums Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3eb2645d-3878-4d44-96e5-a5ffd9299f92",
						"exec": [
							"pm.test(\"TestCase to check whether the Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"TestCase to check whether the body contains the correct UserID\", function () {",
							"    pm.expect(pm.response.text()).to.include(data.UserID);",
							"});",
							"pm.test(\"TestCase to check whether the body contains the correct ID\", function () {",
							"    pm.expect(pm.response.text()).to.include(data.ID);",
							"});",
							"pm.test(\"TestCase to check whether the body contains the correct Title\", function () {",
							"    pm.expect(pm.response.text()).to.include(data.Title);",
							"});",
							"pm.test(\"Performance Testing - Response time should be less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2a12d469-7277-4b9b-8774-2ed4ea5fedd0",
						"exec": [
							"console.log(\"ID:\" +data.UserID);",
							"console.log(\"ID:\" +data.ID);",
							"console.log(\"ID:\" +data.Title);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-type",
						"value": "application/json; charset=UTF-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"userId\": \"{{UserID}}\",\n        \"id\": \"{{ID}}\",\n        \"title\": \"{{Title}}\"\n    }\n]"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/albums",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"albums"
					]
				},
				"description": "fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      title: 'foo',\r\n      body: 'bar',\r\n      userId: 1\r\n    }),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\"\r\n    }\r\n  })\r\n  .then(response => response.json())\r\n  .then(json => console.log(json))"
			},
			"response": []
		}
	]
}